# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
       - alert-manager-0-2:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
   - /opt/bitnami/prometheus/conf/rules.yaml 
   - /opt/bitnami/prometheus/conf/alerts.yaml

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'
    static_configs:
    - targets: ['localhost:9090']
  
  - job_name: 'node-exporter'
    static_configs:
    - targets: ['172.31.18.212:9100','172.31.7.240:9100','172.31.1.176:9100']
    metric_relabel_configs:
      - source_labels: ['nodename']
        regex: '(engine.master)'
        target_label: nodename
        replacement: appz-${1}
      - source_labels: ['nodename']
        regex: 'k8s.(.*)'
        target_label: nodename
        replacement: appz-${1}
        
  - job_name: 'kube-state-metrics'
    static_configs:
    - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']
    
  - job_name: 'kube-state-metrics-qa'
    static_configs:
    - targets: ['192.168.138.92:30000']

  - job_name: 'kubernetes-cadvisor'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
    - role: node
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - target_label: __address__
      replacement: kubernetes.default.svc:443
    - source_labels: [__meta_kubernetes_node_name]
      regex: (.+)
      target_label: __metrics_path__
      replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      
  - job_name: 'yace'
    scrape_interval: 60s
    static_configs:
    - targets: ['yace-0-29-0-29:5000']
    
  - job_name: 'jmeter'
    static_configs:
    - targets: ['jmeter-0-1:9270']
    
  - job_name: 'nodejs'
   
    kubernetes_sd_configs:
    - role: endpoints
    
    
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace]
      
      action: replace
      target_label: namespace
    - source_labels: [__meta_kubernetes_pod_name]
      
      action: replace
      target_label: pod

        
    - source_labels: [pod]
      #regex: '((.*)hellonode(.*))'
      #regex: '((.*)hellonode(.*))'|'kbfc(.*))'
      regex: hellonode.*|kbfc.*|hntest.*
      action: keep

    - source_labels: [__address__]
      target_label: __address__
      regex: '([^:]+)(:[3000]+)?'
      #regex: '([^:]+)(:[80]+)?'
      replacement: '${1}'
      action: drop
      
    - source_labels: [__address__]
      target_label: __address__
      regex: '(.*):80'
      replacement: '${1}'
      action: drop
      
    - source_labels: [__address__]
      regex: '.*'
      target_label: instance
      replacement: 'Appz${1}'  
    
  - job_name: 'mysql'
   
    kubernetes_sd_configs:
    - role: endpoints
    
    
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: pod

        
    #- source_labels: [pod]
     # regex: mysql-5-7.*
     # action: keep
      
    - source_labels: [pod]
      regex: mysql-5-7.*|mariadb-master-10-4.*
      #regex: mariadb-master-10-4.*
      action: keep  

    - source_labels: [__address__]
      target_label: __address__
      regex: '([^:]+)(:[3306]+)?'
      replacement: '${1}'
      action: drop
      
    - source_labels: [__address__]
      regex: '.*'
      target_label: instance
      replacement: 'Appz${1}'
   
      

 
